template CheckCommand "bareos-command" {
	import "plugin-check-command"
	import "ipv4-or-ipv6"

	command = [ PluginContribDir + "/check_bareos.py" ]

	arguments = {
		"--database" = {
			value = "$bareos_database$"
			description = "The database kind for the database connection (m=mysql, p=psql) (default: m)"
			order = -5
		}
		"--user" = {
			value = "$bareos_user$"
			description = "User name for the database connections (default: bareos)"
			order = -4
		}
		"--password" = {
			value = "$bareos_password$"
			description = "Password for the database connections (default: bareos)"
			order = -3
		}
		"--Host" = {
			value = "$bareos_host$"
			description = "Database host"
			order = -2
		}
	}

	vars.bareos_database = "m"
	vars.bareos_user = "bareos"
	vars.bareos_password = "bareos"
	vars.bareos_host = "$check_address$"
}

object CheckCommand "bareos-job" {
	import "bareos-command"

	arguments += {
		"job" = {
			description = "Specific checks on a job"
			order = -1
		}
		"--checkJobs" = {
			set_if = "$bareos_checkjobs$"
			description = "Check how many jobs are in a specific state (default: queued)"
		}
		"--checkJob" = {
			set_if = "$bareos_checkjob$"
			description = "Check the state of a specific job (default: queued)"
		}
		"--runTimeJobs" = {
			set_if = "$bareos_runtimejobs$"
			description = "Check if a backup runs longer then n day"
		}
		"--name" = {
			value = "$bareos_jobname$"
			description = "Name of the job"
		}
		"--time" = {
			value = "$bareos_time$"
			description = "Time in days (default: 7 days)"
		}
		"--unit" = {
			value = "$bareos_unit$"
			description = "Display unit"
		}
		"--warning" = {
			value = "$bareos_warning$"
			description = "Warning value"
		}
		"--critical" = {
			value = "$bareos_critical$"
			description = "Critical value"
		}
		"--state" = {
			value = "$bareos_state$"
			description = "T=Completed, C=Queued, R=Running, E=Terminated with Errors, f=Fatal error, A=Canceled by user (default: C)"
		}
		"--full" = {
			set_if = "$bareos_full$"
			description = "Backup kind full"
		}
		"--inc" = {
			set_if = "$bareos_inc$"
			description = "Backup kind inc"
		}
		"--diff" = {
			set_if = "$bareos_diff$"
			description = "Backup kind diff"
		}
	}
}

object CheckCommand "bareos-tape" {
        import "bareos-command"

        arguments += {
		"tape" = {
			description = "Specific checks on a tapes"
			order = -1
		}
		"--emptyTapes" = {
			set_if = "$bareos_emptytapes$"
			description = "Count empty tapes in the storage (Status Purged/Expired)"
		}
		"--tapesInStorage" = {
			set_if = "$bareos_tapesinstorage$"
			description = "Count how much tapes are in the storage"
		}
		"--expiredTapes" = {
			set_if = "$bareos_expiredtapes$"
			description = "Count how much tapes are expired"
		}
		"--willExpire" = {
			set_if = "$bareos_willexpire$"
			description = "Count how much tapes are will expire in n day"
		}
		"--replaceTapes" = {
			set_if = "$bareos_replacetapes$"
			description = "Count how much tapes should by replaced"
		}
		"--warning" = {
			value = "$bareos_warning$"
			description = "Warning value"
		}
		"--critical" = {
			value = "$bareos_critical$"
			description = "Critical value"
		}
		"--mounts" = {
			value = "$bareos_mounts$"
			description = "Amout of allowed mounts for a tape (used for replace tapes)"
		}
		"--time" = {
			value = "$bareos_time$"
			description = "Time in days (default: 7 days)"
		}
	}
}

object CheckCommand "bareos-status" {
        import "bareos-command"

        arguments += {
		"status" = {
			key = "status"
			description = "Specific status informations"
			order = -1
		}
		"--totalBackupsSize" = {
			set_if = "$bareos_totalbackupssize$"
			description = "The size of all backups in the database (use time and kind for mor restrictions)"
		}
		"--emptyBackups" = {
			set_if = "$bareos_emptybackups$"
			description = "Check if a successful backup have 0 bytes (only wise for full backups)"
		}
		"--oversizedBackup" = {
			set_if = "$bareos_oversizedbackup$"
			description = "Check if a backup have more than n TB"
		}
		"--failedBackups" = {
			set_if = "$bareos_failedbackups$"
			description = "Check if a backup failed in the last n day"
		}
		"--full" = {
			set_if = "$bareos_full$"
			description = "Backup kind full"
		}
		"--inc" = {
			set_if = "$bareos_inc$"
			description = "Backup kind inc"
		}
		"--diff" = {
			set_if = "$bareos_diff$"
			description = "Backup kind diff"
		}
		"--time" = {
			value = "$bareos_time$"
			description = "Time in days"
		}
		"--warning" = {
			value = "$bareos_warning$"
			description = "Warning value (default: 5)"
		}
		"--critical" = {
			value = "$bareos_critical$"
			description = "Critical value (default: 10)"
		}
		"--size" = {
			value = "$bareos_size$"
			description = "Border value for oversized backups (default: 2)"
		}
		"--unit" = {
			value = "$bareos_unit$"
			description = "Display unit (default: TB)"
		}
        }
}
